---
# Stand up a home automation host
- name: Configure home assistant
  hosts: all
  remote_user: ubuntu
  environment:
    DOCKER_HOST: unix:{{ ansible_env.XDG_RUNTIME_DIR }}/podman/podman.sock
  tasks:
    # Set proper hostname
    - name: Set hostname
      ansible.builtin.hostname:
        name: homeautomation
      become: yes
    # Install & enable container runtime
    - name: Ensure podman-docker is installed
      ansible.builtin.apt:
        name: podman-docker
        state: present
      become: yes
    - name: Ensure podman socket is available
      ansible.builtin.systemd:
        name: podman.socket
        enabled: true
      become: yes
    - name: Create systemd user folder
      ansible.builtin.file:
        dest: "{{ ansible_env.HOME }}/.config/systemd/user"
        state: directory
    - name: Link podman-restart.service to user home directory
      ansible.builtin.file:
        src: /lib/systemd/system/podman-restart.service
        dest: "{{ ansible_env.HOME }}/.config/systemd/user/podman-restart.service"
        state: link
    - name: Ensure podman-restart service is enabled
      ansible.builtin.systemd:
        name: podman-restart.service
        scope: user
        enabled: true
        daemon_reload: true # Otherwise systemd won't see the new service the first time this step runs
    # Stand up HomeBridge
    - name: Copy docker-compose.yaml to remote host
      ansible.builtin.copy:
        src: ../../docker/homebridge/
        dest: "{{ ansible_env.HOME }}/homebridge-docker-compose/"
        mode: 0600
        directory_mode: 0700
    - name: Stand up homebridge via docker-compose
      community.docker.docker_compose:
        project_src: "{{ ansible_env.HOME }}/homebridge-docker-compose"
        state: present
